% 经网络的数据预处理一般是归一化，归一化是把输入数据映射到[-1,1],或者[0,1]。为什么要归一化：因为1）输入数据的单位不一样，有些数据的范围可能特别大，导致结果是神经网络收敛慢、训练时间长。
% 2）数据范围大的输入在模式分类中的作用可能会偏大，而数据范围小的输入作用就可能会偏小。
% 3）由于神经网络输出层的激活函数的值域是有限制的，因此需要将网络训练的目标数据映射到激活函数的值域。例如神经网络的输出层若采用S形激活函数，由于S形函数的值域限制在(0,1)，也就是说神经网络的输出只能限制在(0,1)，所以训练数据的输出就要归一化到[0,1]区间。

%BP神经网络来逼近函数曲线
u=[-1:0.01:1];
t=sin(2*pi*u);
% try to use different f and training algo.
net=newff(minmax(u),[1,10 1],{'tansig','tansig','purelin'},'trainlm');%创建一个前馈BP网络
%newff函数创建网络时权值与阈值的初始化都是随机的
%[10,1]代表隐含层神经元个数为10，输出层神经元只有一个
%选择隐含层和输出层神经元传递函数分别为tansig，purelin
%网络训练的算法采用trainlm
% training param.
%训练参数
net.trainParam.goal=1e-10;%网络训练精度设置为0.2
net.trainParam.epochs=10000;%网络训练时间为10000

[net,tr]=train(net,u,t);
% [net,tr,Y,E]=train(NET,X,T,Xi,Ai)%神经网络训练函数
%NET为需要训练的神经网络，
%X为神经网络的输入
%T为神经网络的目标输出
%Xi初始输入时延，默认是0
%Ai初始的层时延，默认为0
%net表示完成训练的伸进网络
%tr表示神经网络的步数
%Y为神经网络的输出
%E为神经网络的训练误差
y=sim(net,u);
%[Y,Xf,Af,E]=sim(net,X,Xi,Ai,T)%神经网络仿真函数
%net是要训练的网络
%X为神经网络的输入
%Xi初始输入时延，默认是0
%Ai初始的层时延，默认为0
%T为神经网络的目标输出，默认值为0
%Y为神经网络的输出
%Xf最终输入时延
%Af最终的层时延
%E表示网络误差


% mse为均方误差性能函数
% pref=mse(net,t,y,ew)  %net是建立起来的神经网络
%t为目标向量
%y为网络的输出向量
%ew为所有权值和偏值向量，
%perf为均方误差
plot(u,t,u,y);
% nnd9sdq